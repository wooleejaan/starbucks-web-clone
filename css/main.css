/* ===================================== COMMON ===================================== */
body {
  /* 검정색보다 어두운 회색이 덜 촌스럽다. */
  color: #333;
  font-size: 16px;
  font-weight: 400;
  /* 16px의 1.4배  (사용하는 글꼴에 따라 최적의 line-height가 다를 수는 있다.) */
  line-height: 1.4;
  font-family: "Nanum Gothic", sans-serif;
  /* 임시로 body 값에 높이를 지정해주는 경우가 있는데, 보통 스크롤 이벤트 구현할 때 임시로 많이 넣는다. */
  /* height: 6000px; */
}
img {
  display: block;
}
a {
  text-decoration: none;
}
.inner {
  width: 1100px;
  /* 좌우만 margin을 줘서 좌우 가운데 정렬  */
  margin: 0 auto;
  /* 자식 요소에서 position을 사용하려면 부모 요소에도 position이 있어야 한다(처음부터 추가하는 게 아니라 자식 요소 스타일링하면서 자연스럽게 추가). */
  position: relative;
}
.btn {
  width: 130px;
  padding: 10px;
  border: 1px solid #333;
  border-radius: 4px;
  color: #333;
  /* 부모요소로부터 글자 크기를 이상하게 받을 수 있으므로 명시해줘야 한다. */
  font-size: 16px;
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  /* padding과 border만큼 요소가 커지지 않도록 하는 장치 */
  box-sizing: border-box;
  /* a 태그나 span 태그에 btn 클래스를 부여해도 정상적으로 형태 나오도록 */
  display: block;
  transition: 0.4s;
}
.btn:hover {
  background-color: #333;
  color: #fff;
}
/* 클래스를 2개 작성했으므로 우선순위 20점을 확보한 것이므로, 이후에 btn--reverse로 덮어씌워도 정상적으로 덮어씌워질 것이다. */
.btn.btn--reverse {
  background-color: #333;
  color: #fff;
}
/* 가상클래스까지 합해서 우선순위 30점 */
.btn.btn--reverse:hover {
  background-color: transparent;
  color: #333;
}
.btn.btn--brown {
  border-color: #592b18;
  color: #592b18;
}
.btn.btn--brown:hover {
  background-color: #592b18;
  color: #fff;
}
.btn.btn--gold {
  border-color: #d9aa8a;
  color: #d9aa8a;
}
.btn.btn--gold:hover {
  background-color: #d9aa8a;
  color: #fff;
}
.btn.btn--white {
  border-color: #fff;
  color: #fff;
}
.btn.btn--white:hover {
  color: #333;
  background-color: #fff;
}

/* 스크롤 애니메이션 */
.back-to-position {
  opacity: 0;
  transition: 1s;
}
.back-to-position.to-right {
  /* 수평으로 -150px 이동 => 시작점을 왼쪽에 밀어넣고 변화를 주면 오른쪽으로 이동하는 효과가 발생 */
  transform: translateX(-150px);
}
.back-to-position.to-left {
  /* 시작점을 왼쪽에 밀어넣고 변화를 주면 오른쪽으로 이동하는 효과가 발생 */
  transform: translateX(150px);
}
.show .back-to-position {
  opacity: 1;
  transform: translateX(0);
}
.show .back-to-position.delay-0 {
  /* 기본값이 0이긴 하다. */
  transition-delay: 0s;
}
.show .back-to-position.delay-1 {
  transition-delay: 0.3s;
}
.show .back-to-position.delay-2 {
  transition-delay: 0.6s;
}
.show .back-to-position.delay-3 {
  transition-delay: 0.9s;
}

/* ===================================== HEADER ===================================== */
header {
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  position: fixed;
  width: 100%;
  top: 0;
  /* 뱃지 부분이 visual section 보다 위에 있어야 하므로 아예 높은 값을 배정해준다. */
  z-index: 9;
}
header > .inner {
  /* header 자체는 height 값이 없으므로 줄어드려고 하고, .inner가 120px이므로 header도 120px 높이를 갖는다. */
  height: 120px;
}
header .logo {
  /* 로고의 실제 높이값 */
  height: 75px;
  /* 부모 요소 기준 배치 */
  position: absolute;
  /* 로고를 inner 왼쪽으로 밀어넣고, 수직기준 가운데 배치 */
  top: 0;
  bottom: 0;
  left: 0;
  margin: auto;
}

/* ===================================== HEADER(서브메뉴) ===================================== */
header .sub-menu {
  /* .sub-menu의 부모는 .inner */
  position: absolute;
  top: 10px;
  right: 0;
  display: flex;
}
header .sub-menu ul.menu {
  /* 서브메뉴에는 Arial이 예쁘다. 콤마 뒤에는 서브로, 앞에 꺼가 없으면 대체하도록 여러 개 작성 가능 */
  font-family: Arial, sans-serif;
  display: flex;
}
header .sub-menu ul.menu li {
  position: relative;
}
header .sub-menu ul.menu li::before {
  content: "";
  /* display: block; */
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto 0;
}
header .sub-menu ul.menu li:first-child::before {
  display: none;
}
header .sub-menu ul.menu li a {
  display: block;
  font-size: 12px;
  padding: 11px 16px;
  color: #656565;
}
header .sub-menu ul.menu li a:hover {
  color: #000;
}

header .sub-menu .search {
  /* background-color: red; */
  height: 34px;
  position: relative;
}
header .sub-menu .search input {
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  border-radius: 5px;
  outline: none;
  background-color: #fff;
  color: #777;
  font-size: 12px;
  transition: width 0.4s;
}
header .sub-menu .search input:focus {
  width: 190px;
  border-color: #669900;
}
header .sub-menu .search .material-icons {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 5px;
  /* 구글 material-icons 크기가 24px */
  height: 24px;
  margin: auto 0;
  /* 아무것도 작성 안 하면 all 생략 */
  transition: 0.4s;
}

header .sub-menu .search.focused .material-icons {
  opacity: 0;
}

/* ===================================== HEADER(메인메뉴) ===================================== */
header .main-menu {
  display: flex;
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1;
}
/* header .main-menu .item {} */
header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}
/* hover를 item__name에 주는 게 아니라 .item에 줘야 contents도 영향 받는다. */
header .main-menu .item:hover .item__name {
  background-color: #2c2a29;
  color: #669900;
  /* radius는 좌상단/우상단만 적용 */
  border-radius: 6px 6px 0 0;
}
header .main-menu .item .item__contents {
  width: 100%;
  /* 뷰포트 기준으로 배치하겠다. */
  position: fixed;
  left: 0;
  display: none;
}
header .main-menu .item:hover .item__contents {
  display: block;
}
header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
  /* height: 200px; => 내용물을 채웠으니 높이값 지정하지 않아도 auto로 차지함*/
}
header .main-menu .item .item__contents .contents__menu > ul {
  display: flex;
  padding: 20px 0;
}
header .main-menu .item .item__contents .contents__menu > ul > li {
  width: 220px;
}
header .main-menu .item .item__contents .contents__menu > ul > li h4 {
  padding: 3px 0 12px 0;
  font-size: 14px;
  color: #fff;
}
/* header .main-menu .item .item__contents .contents__menu > ul > li h4 ul {}  */
header .main-menu .item .item__contents .contents__menu > ul > li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover {
  color: #669900;
}
header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  /* 아래에서 중복으로 12px을 넣으니까 상위 요소에 이렇게 넣는 게 더 깔끔하잖아(글자 관련 속성은 상속된다) */
  font-size: 12px;
  /* background-repeat의 기본값이 repeat이므로 */
  background-image: url("../images/main_menu_pattern.jpg");
}
header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700;
  /* font-size: 12px; */
}
header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
  /* font-size: 12px; */
}

/* ===================================== HEADER(전역 뱃지) ===================================== */
header .badges {
  /* .inner 밖에 작성했으므로 부모는 header => header로 올라가서 position 값이 있는지 확인(없으면 posr 할당) */
  position: absolute;
  top: 130px;
  right: 12px;
}
header .badges .badge {
  border-radius: 10px;
  /* radius를 여기에 줬으므로, 내부에 있는 이미지가 깎은 모서리 밖으로 넘쳐 흐르지 않도록 hidden */
  overflow: hidden;
  margin-bottom: 12px;
  /* x축 4px이동, y축 4px이동, blur를 10px 추가 rgb로 검정색 추가 */
  /* 검정색이면 rgb 0 0 0인데 a가 붙으니까 뒤에 투명도도 값 배정해줘야 함 0.15 */
  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.15);
  cursor: pointer;
}

/* ===================================== VISUAL ===================================== */
.visual {
  /* 120px은 header의 높이값이다. */
  margin-top: 120px;
  background-image: url("../images/visual_bg.jpg");
  background-position: center;
}
.visual .inner {
  height: 646px;
  /* background-color: orange; */
}
/* .inner 처럼 단순히 감싸는 용도거나 하면 중간에 .inner를 생략하고 .title만 작성해도 된다(권장). */
.visual .title {
  /* 이미 만든 .inner에는 position 값이 있으므로 ok */
  position: absolute;
  top: 88px;
  left: -10px;
}
.visual .title .btn {
  position: absolute;
  top: 259px;
  left: 173px;
}
/* 아래처럼 클래스 붙여서 작성하면 일치 선택자 &&*/
.visual .cup1.image {
  position: absolute;
  bottom: 0;
  right: -47px;
}
.visual .cup1.text {
  position: absolute;
  top: 38px;
  right: 171px;
}
.visual .cup2.image {
  position: absolute;
  bottom: 0;
  right: 162px;
}
.visual .cup2.text {
  position: absolute;
  top: 321px;
  right: 416px;
}
.visual .spoon {
  position: absolute;
  bottom: 0;
  left: 275px;
}
.visual .fade-in {
  opacity: 0;
}

/* ===================================== NOTICE ===================================== */
.notice .notice-line {
  position: relative;
}
.notice .notice-line .bg-left {
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  background-color: #333;
}
.notice .notice-line .bg-right {
  position: absolute;
  top: 0;
  right: 0;
  width: 50%;
  height: 100%;
  background-color: #f6f5ef;
}
.notice .notice-line .inner {
  /* .notice-line에서 높이값이 별도로 없으므로 최대한 줄어들려고 노력하다가 .inner를 만나서 .inner의 height를 높이값으로 갖는다. */
  /* 이렇게 되면 .inner 부분만 높이를 제어하면 위에는 전부 absolute로 연결되어 있으므로 따라오는 구조 */
  height: 62px;
  /* border: 2px solid red; */
  display: flex;
}
.notice .notice-line .inner__left {
  /* 왼쪽에 조금 더 침범해서 차지하게 UI 만들어야 하므로 */
  width: 60%;
  height: 100%;
  background-color: #333;
  /* 내부 요소들이 수평이 되어야 하므로 */
  display: flex;
  align-items: center;
}
.notice .notice-line .inner__left h2 {
  color: #fff;
  font-size: 17px;
  font-weight: 700;
  margin-right: 20px;
}
.notice .notice-line .inner__left .swiper-container {
  height: 62px;
  /* background-color: orange; */
  flex-grow: 1;
}
.notice .notice-line .inner__left .swiper-slide {
  height: 62px;
  display: flex;
  align-items: center;
}
.notice .notice-line .inner__left .swiper-slide a {
  color: #fff;
}
.notice .notice-line .inner__left .notice-line__more {
  width: 62px;
  height: 62px;
  display: flex;
  /* 수평 가운데 */
  justify-content: center;
  /* 수직 가운데 */
  align-items: center;
}
.notice .notice-line .inner__left .notice-line__more .material-icons {
  /* a 태그 기본 색상이 파란색이므로 이걸 흰색으로 바꿔줘야 한다. */
  color: #fff;
  /* 구글 아이콘 기본 크기는 24px */
  font-size: 30px;
}
.notice .notice-line .inner__right {
  width: 40%;
  height: 100%;
  display: flex;
  /* 수평 : 우측으로 밀어 넣기 */
  justify-content: flex-end;
  /* 수직 : 가운데 정렬 */
  align-items: center;
}
.notice .notice-line .inner__right h2 {
  font-size: 17px;
  font-weight: 700;
}
.notice .notice-line .inner__right .toggle-promotion {
  width: 62px;
  height: 62px;
  /* a 태그가 아니므로 클릭할 수 있다는 걸 사용자에게 알려주기 위해서 */
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
}
.notice .notice-line .inner__right .toggle-promotion .material-icons {
  font-size: 30px;
}

.notice .promotion {
  height: 693px;
  background-color: #f6f5ef;
  position: relative;
  transition: height 0.4s;
  /* hide에서 높이를 줄이면 그 과정에서 요소들이 넘쳐흐를테니까 넘치는 걸 안보이게 하기 위해 overflow */
  overflow: hidden;
}
.notice .promotion.hide {
  height: 0;
}
.notice .promotion .swiper-container {
  /* CSS에서 유용하다. 이걸 내가 직접 계산하기 보다는 이렇게 계산을 맡기는 게 더 정확하므로. 단위가 px가 아니어도 계산 가능하다. */
  width: calc(819px * 3 + 10px * 2);
  /* 이미지 높이가 553px */
  height: 553px;
  /* background-color: orange; */
  /* text-align: center; */
  /* font-size: 200px; */

  /* 화면이 줄어들어도 계속 가운데 배치하려면 부모를 기준으로 잡아야 한다. */
  /* left로 50%지점부터 요소가 시작하게 한 뒤에, margin-left를 width의 절반값을 음수로 주면 당겨져서 가운데 위치하게 된다. */
  position: absolute;
  top: 40px;
  left: 50%;
  margin-left: calc((819px * 3 + 10px * 2) / -2);
}

.notice .promotion .swiper-slide {
  opacity: 0.5;
  transition: opacity 1s;
  /* posr을 보면 아 자식 요소 중 누가 얘를 사용했구나 라고 이해하면 될 것 같다. */
  position: relative;
}
.notice .promotion .swiper-slide-active {
  opacity: 1;
}
.notice .promotion .swiper-slide .btn {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  /* 위에서 이미 .btn에 가로 너비를 명시해줬으므로 auto 적용이 된다. */
  margin: auto;
}

.notice .promotion .swiper-pagination {
  /* .swiper-pagination에 이미 라이브러리 자체적으로 스타일이 기본적으로 들어가 있고, 거기에 Position 값이 이미 존재한다. */
  bottom: 40px;
  left: 0;
  right: 0;
}
/* bullet 부분의 클래스는 전부 개발자도구에서 직접 찾아야 한다. */
.notice .promotion .swiper-pagination .swiper-pagination-bullet {
  /* 기존에 있는 배경 색상은 지우고(투명하게하고) 이미지를 넣을 것이므로 */
  background-color: transparent;
  background-image: url("../images/promotion_slide_pager.png");
  width: 12px;
  height: 12px;
  margin-right: 6px;
  outline: none;
}
.notice .promotion .swiper-pagination .swiper-pagination-bullet:last-child {
  margin-right: 0;
}
.notice .promotion .swiper-pagination .swiper-pagination-bullet-active {
  background-image: url("../images/promotion_slide_pager_on.png");
}
/* 쉼표는 다중선택자 (줄바꿈해야 시각적으로 알아내기 쉬움) */
.notice .promotion .swiper-prev,
.notice .promotion .swiper-next {
  width: 42px;
  height: 42px;
  border: 2px solid #333;
  border-radius: 50%;
  position: absolute;
  top: 300px;
  z-index: 1;
  cursor: pointer;
  /* 라이브러리 기본값 지우기 */
  outline: none;

  /* 아이콘 가운데 정렬 */
  display: flex;
  justify-content: center;
  align-items: center;

  transition: 0.4s;
}
.notice .promotion .swiper-prev {
  left: 50%;
  margin-left: -480px;
}
.notice .promotion .swiper-next {
  right: 50%;
  margin-right: -480px;
}
.notice .promotion .swiper-prev:hover,
.notice .promotion .swiper-next:hover {
  background-color: #333;
  color: #fff;
}

/* ===================================== REWARDS ===================================== */
.rewards {
  position: relative;
}
.rewards .bg-left {
  width: 50%;
  height: 100%;
  background-color: #272727;
  position: absolute;
  top: 0;
  left: 0;
}
.rewards .bg-right {
  width: 50%;
  height: 100%;
  background-color: #d5c798;
  position: absolute;
  top: 0;
  right: 0;
}
.rewards .inner {
  background-image: url("../images/rewards.jpg");
  height: 241px;
}
.rewards .btn-group {
  /* 부모는 .inner인데 전역 속성으로 우리가 posr을 넣어놨다. */
  position: absolute;
  bottom: 24px;
  right: 0;
  width: 250px;
  display: flex;
  /* 가로너비 250보다 넘칠 것 같으면 줄바꿈 허용 */
  flex-wrap: wrap;
}
.rewards .btn-group .btn.sign-up {
  margin-right: 10px;
}
.rewards .btn-group .btn.sign-in {
  /* sign-up이랑 sign-in을 가로로 배치할 건데 둘이 합쳐서 250이 넘으므로 sign-in 너비를 이렇게 조정해준다. */
  width: 110px;
}
.rewards .btn-group .btn.gift {
  /* gift는 아래에 배치될 녀석이다. */
  margin-top: 10px;
  /* gift만 아래에서 꽉채우도록 1을 준다. */
  flex-grow: 1;
}

/* ===================================== YOUTUBE VIDEO ===================================== */
.youtube {
  position: relative;
  height: 700px;
  background-color: #333;
  overflow: hidden;
}
.youtube .youtube__area {
  /* FHD : 1920 X 1080 */
  width: 1920px;
  background-color: orange;
  position: absolute;
  left: 50%;
  margin-left: calc(1920px / -2);
  top: 50%;
  /* 세로 길이도 16:9 비율로 들어갈 수 있게 */
  margin-top: calc((1920px * 9 / 16 / -2));
}
/* html에서 요소를 만들지 않고 css에서 자식 요소를 만들기 위해서 */
/* 결국은 자식 요소에서 padding으로 밀어올려서 .youtube__area가 보이게 되고, 이걸 위에서 조정하는 것임. */

/* el::before 이란 선택한 요소의 첫번째 자식 요소로 가상 요소를 생성 */
.youtube .youtube__area::before {
  content: "";
  display: block;
  width: 100%;
  height: 0;
  padding-top: 56.25%;
}
/* 사용자에게 조작 가능한 게 아니라 배경으로 깔리는 영상이라는 알려주기 위해 패턴을 깔고 어둡게 덮는다. */
.youtube .youtube__cover {
  background-image: url("../images/video_cover_pattern.png");
  background-color: rgba(0, 0, 0, 0.3);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

#player {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.youtube .inner {
  height: 700px;
}
.youtube .floating1 {
  position: absolute;
  top: 50px;
  left: 0;
}
.youtube .floating2 {
  position: absolute;
  top: 350px;
  left: 150px;
}
/* floating3는 season product에서 처리해서 위에 올라올 수 있게끔 처리한다. */
/* .youtube .floating3 {
  position: absolute;
  bottom: -200px;
  right: 0;
} */

/* ===================================== SEASON PRODUCT ===================================== */
.season-product {
  background-image: url("../images/season_product_bg.jpg");
}
.season-product .inner {
  height: 400px;
}
/* floating3 */
.season-product .floating3 {
  position: absolute;
  top: -200px;
  right: 0;
}
.season-product .text-group {
  position: absolute;
  top: 110px;
  right: 100px;
}
.season-product .text-group .title {
  margin-bottom: 10px;
}
.season-product .text-group .description {
  margin-bottom: 15px;
}
/* .season-product .text-group .more {} */

/* ===================================== RESERVE COFFEE ===================================== */
.reserve-coffee {
  /* background-image는 기본값이 repeat이므로 가로너비를 꽉채우는 게 기본값이다. */
  background-image: url("../images/reserve_bg.jpg");
}
.reserve-coffee .inner {
  height: 400px;
}
.reserve-coffee .reserve-logo {
  position: absolute;
  top: 110px;
  left: 0;
}
.reserve-coffee .text-group {
  position: absolute;
  top: 124px;
  left: 208px;
}
.reserve-coffee .product {
  position: absolute;
  top: 0;
  right: 0;
}

/* ===================================== PICK YOUR FAVORITE ===================================== */
.pick-youre-favorite {
  background-image: url("../images/favorite_bg.jpg");
  background-repeat: no-repeat;
  background-position: center;
  /* 패럴랙스 스크롤링 구현(이미지를 뷰포트 기준으로 고정해둬서 스크롤해도 배경이 따라오지 않도록 */
  background-attachment: fixed;
  /* 배경 이미지를 요소의 더 넓은 너비에 맞춰서 출력 */
  background-size: cover;
}
.pick-youre-favorite .inner {
  /* 위아래만 적용 */
  padding: 110px 0;
}
.pick-youre-favorite .text-group {
  /* background-color: orange; */
  /* flex를 주면 가로정렬이 되는데, 여기서 너비 값을 제한하고 줄바꿈을 허용해서 레이아웃을 짤 수도 있다. */
  width: 362px;
  display: flex;
  /* 줄바꿈 가능한 형태로 */
  flex-wrap: wrap;
  justify-content: flex-end;
  margin-left: 100px;
}
.pick-youre-favorite .text-group .title {
  margin-bottom: 40px;
}
.pick-youre-favorite .text-group .description {
  margin-bottom: 40px;
}

/* ===================================== RESERVE STORE ===================================== */
.reserve-store {
  /* pick-your-favorite 처럼 패럴렉스 구현 */
  background-image: url("../images/reserve_store_bg.jpg");
  background-repeat: no-repeat;
  background-position: center;
  background-attachment: fixed;
  background-size: cover;
}
.reserve-store .inner {
  height: 600px;
  display: flex;
  justify-content: center;
  align-items: center;
}
.reserve-store .medal {
  /* 이미지 크기를 여기에도 부여해서 영역을 딱 맞춰줘야 허공에 hover해도 회전하는 문제를 방지할 수 있다. */
  width: 334px;
  height: 334px;
  perspective: 600px;
}
/* 다중선택자. 여기서 공통 스타일 주려한다. */
.reserve-store .medal .front,
.reserve-store .medal .back {
  width: 334px;
  height: 334px;
  /* 뒤집어진 요소는 지워주세요. */
  backface-visibility: hidden;
  transition: 1s;
  position: absolute;
}
.reserve-store .medal .front {
  /* 요소 2개가 겹쳐지게 된다. */
  /* 0deg에서 시작하겠다. 변화는 없지만 크롬 말고 다른 브라우저에서는 시작값이 다를 수 있으므로 이렇게 명시해줘야 한다. */
  transform: rotateY(0deg);
}
.reserve-store .medal:hover .front {
  transform: rotateY(180deg);
}
.reserve-store .medal .back {
  /* 뒤집어주세요. */
  transform: rotateY(-180deg);
}
.reserve-store .medal:hover .back {
  transform: rotateY(0deg);
}
.reserve-store .medal .back .btn {
  position: absolute;
  top: 240px;
  left: 0;
  right: 0;
  /* btn에 이미 가로너비 넣어놨으므로 width 안 넣어도 된다. */
  margin: auto;
}

/* ===================================== FIND STORE ===================================== */
.find-store {
  background-image: url("../images/find_store_bg.jpg");
}
.find-store .inner {
  height: 400px;
}
.find-store .texture1 {
  position: absolute;
  top: 0;
  left: 400px;
}
.find-store .texture2 {
  position: absolute;
  bottom: 0;
  right: 0;
}
.find-store .picture {
  /* picture 2개 다 동그라미 형태가 되도록 하기 위해서 */
  border-radius: 50%;
  /* x축 2px y축 2px blur가 8px 50% 투명도를 갖는 검정색 */
  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.5);
  position: absolute;
}
.find-store .picture1 {
  top: -60px;
  left: 0;
}
.find-store .picture2 {
  top: 150px;
  left: 250px;
}
.find-store .text-group {
  position: absolute;
  top: 120px;
  left: 550px;
}
.find-store .text-group .title {
  margin-bottom: 20px;
}
.find-store .text-group .description {
  margin-bottom: 20px;
}

/* ===================================== AWARDS ===================================== */
.awards {
  background-color: #272727;
}
.awards .inner {
  padding: 40px 0;
}
.awards .swiper-container {
  width: 100%;
  height: 40px;
}
.awards .swiper-prev,
.awards .swiper-next {
  width: 42px;
  height: 42px;
  border: 2px solid #fff;
  border-radius: 50%;
  /* 파란색 테두리 생기지 않도록 */
  outline: none;
  /* 아이콘이 흰색이 될 수 있게 */
  color: #fff;
  opacity: 0.3;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0;
  bottom: 0;
  /* 수직으로 정렬할 거면 height가 존재해야 한다. */
  margin: auto;
}
.awards .swiper-prev {
  left: -100px;
}
.awards .swiper-next {
  right: -100px;
}
.awards .swiper-prev:hover,
.awards .swiper-next:hover {
  background-color: #fff;
  color: #333;
}


/* ===================================== FOOTER ===================================== */
footer {
  background-color: #272727;
  border-top: 1px solid #333;
}
footer .inner {
  padding: 40px 0 60px 0;
}
footer .menu {
  display: flex;
  justify-content: center;
} 
footer .menu li {
  position: relative;
} 
/* 글자 사이에 점을 만들어줄건데, 새로운 요소를 만드는 건 부담스러우니 가상요소선택자를 사용한다. */
footer .menu li::before {
  content: "";
  width: 3px;
  height: 3px;
  background-color: #555;
  /* before는 기본적으로 인라인 요소이므로 가로/세로 값을 가지려면 block을 줘야 해(근데 posa, posf는 자동으로 block이 됨) */
  position: absolute;
  /* top/bottom 0 주고 margin auto 주면 세로정렬 */
  top: 0;
  bottom: 0;
  right: -1px;
  margin: auto;
} 
footer .menu li:last-child::before {
  display: none;
}
footer .menu li a {
  color: #ccc;
  font-size: 12px;
  font-weight: 700;
  /* padding을 주는 이유는 사용자가 클릭할 수 있는 범위를 늘리기 위해서 */
  padding: 15px;
  /* inline 요소는 margin/padding 정상적으로 사용 불가능하므로 */
  display: block;
} 
footer .menu li a.green {
  color: #669900;
}
footer .btn-group {
  margin-top: 20px;
  display: flex;
  justify-content: center;
}
footer .btn-group .btn {
  font-size: 12px;
  margin-right: 10px;
} 
footer .btn-group .btn:last-child {
  margin-right: 0;
}
footer .info {
  margin-top: 30px;
  /* 글자 정렬 */
  text-align: center;
}
footer .info span {
  /* span 태그는 인라인 요소. 인라인 요소는 수직이 아니라 수평으로 쌓인다(글자처럼 취급되어야 하므로). */
  margin-right: 20px;
  color: #999;
  font-size: 12px;
} 
footer .info span:last-child {
  margin-right: 0;
}
footer .copyright {
  color: #999;
  font-size: 12px;
  text-align: center;
  margin-top: 12px;
}
footer .logo {
  /* 상 중(좌우) 하 */
  margin: 30px auto 0;
  /* 
  원래 auto로 주면서 가로 정렬을 하려면 width가 있어야 하잖아. 근데 얘는 없어도 된다. 
  왜냐면, img 태그라서. img 요소는 브라우저가 너비를 알고 있다고 가정해서 별도로 가로 사이즈 안 넣어도 된다. 
  */
}


/* ===================================== to-top ===================================== */
#to-top {
  width: 42px;
  height: 42px;
  background-color: #333;
  color: #fff;
  border: 2px solid #fff;
  border-radius: 10px;
  cursor: pointer;
  /* 내부 아이콘이 가운데에 올 수 있게 */
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  bottom: 30px;
  right: 30px;
  z-index: 9;
}