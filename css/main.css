/* ===================================== VISUAL ===================================== */
.visual {
  /* 120px은 header의 높이값이다. */
  margin-top: 120px;
  background-image: url("../images/visual_bg.jpg");
  background-position: center;
}
.visual .inner {
  height: 646px;
  /* background-color: orange; */
}
/* .inner 처럼 단순히 감싸는 용도거나 하면 중간에 .inner를 생략하고 .title만 작성해도 된다(권장). */
.visual .title {
  /* 이미 만든 .inner에는 position 값이 있으므로 ok */
  position: absolute;
  top: 88px;
  left: -10px;
}
.visual .title .btn {
  position: absolute;
  top: 259px;
  left: 173px;
}
/* 아래처럼 클래스 붙여서 작성하면 일치 선택자 &&*/
.visual .cup1.image {
  position: absolute;
  bottom: 0;
  right: -47px;
}
.visual .cup1.text {
  position: absolute;
  top: 38px;
  right: 171px;
}
.visual .cup2.image {
  position: absolute;
  bottom: 0;
  right: 162px;
}
.visual .cup2.text {
  position: absolute;
  top: 321px;
  right: 416px;
}
.visual .spoon {
  position: absolute;
  bottom: 0;
  left: 275px;
}
.visual .fade-in {
  opacity: 0;
}

/* ===================================== NOTICE ===================================== */
.notice .notice-line {
  position: relative;
}
.notice .notice-line .bg-left {
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  background-color: #333;
}
.notice .notice-line .bg-right {
  position: absolute;
  top: 0;
  right: 0;
  width: 50%;
  height: 100%;
  background-color: #f6f5ef;
}
.notice .notice-line .inner {
  /* .notice-line에서 높이값이 별도로 없으므로 최대한 줄어들려고 노력하다가 .inner를 만나서 .inner의 height를 높이값으로 갖는다. */
  /* 이렇게 되면 .inner 부분만 높이를 제어하면 위에는 전부 absolute로 연결되어 있으므로 따라오는 구조 */
  height: 62px;
  /* border: 2px solid red; */
  display: flex;
}
.notice .notice-line .inner__left {
  /* 왼쪽에 조금 더 침범해서 차지하게 UI 만들어야 하므로 */
  width: 60%;
  height: 100%;
  background-color: #333;
  /* 내부 요소들이 수평이 되어야 하므로 */
  display: flex;
  align-items: center;
}
.notice .notice-line .inner__left h2 {
  color: #fff;
  font-size: 17px;
  font-weight: 700;
  margin-right: 20px;
}
.notice .notice-line .inner__left .swiper-container {
  height: 62px;
  /* background-color: orange; */
  flex-grow: 1;
}
.notice .notice-line .inner__left .swiper-slide {
  height: 62px;
  display: flex;
  align-items: center;
}
.notice .notice-line .inner__left .swiper-slide a {
  color: #fff;
}
.notice .notice-line .inner__left .notice-line__more {
  width: 62px;
  height: 62px;
  display: flex;
  /* 수평 가운데 */
  justify-content: center;
  /* 수직 가운데 */
  align-items: center;
}
.notice .notice-line .inner__left .notice-line__more .material-icons {
  /* a 태그 기본 색상이 파란색이므로 이걸 흰색으로 바꿔줘야 한다. */
  color: #fff;
  /* 구글 아이콘 기본 크기는 24px */
  font-size: 30px;
}
.notice .notice-line .inner__right {
  width: 40%;
  height: 100%;
  display: flex;
  /* 수평 : 우측으로 밀어 넣기 */
  justify-content: flex-end;
  /* 수직 : 가운데 정렬 */
  align-items: center;
}
.notice .notice-line .inner__right h2 {
  font-size: 17px;
  font-weight: 700;
}
.notice .notice-line .inner__right .toggle-promotion {
  width: 62px;
  height: 62px;
  /* a 태그가 아니므로 클릭할 수 있다는 걸 사용자에게 알려주기 위해서 */
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
}
.notice .notice-line .inner__right .toggle-promotion .material-icons {
  font-size: 30px;
}

.notice .promotion {
  height: 693px;
  background-color: #f6f5ef;
  position: relative;
  transition: height 0.4s;
  /* hide에서 높이를 줄이면 그 과정에서 요소들이 넘쳐흐를테니까 넘치는 걸 안보이게 하기 위해 overflow */
  overflow: hidden;
}
.notice .promotion.hide {
  height: 0;
}
.notice .promotion .swiper-container {
  /* CSS에서 유용하다. 이걸 내가 직접 계산하기 보다는 이렇게 계산을 맡기는 게 더 정확하므로. 단위가 px가 아니어도 계산 가능하다. */
  width: calc(819px * 3 + 10px * 2);
  /* 이미지 높이가 553px */
  height: 553px;
  /* background-color: orange; */
  /* text-align: center; */
  /* font-size: 200px; */

  /* 화면이 줄어들어도 계속 가운데 배치하려면 부모를 기준으로 잡아야 한다. */
  /* left로 50%지점부터 요소가 시작하게 한 뒤에, margin-left를 width의 절반값을 음수로 주면 당겨져서 가운데 위치하게 된다. */
  position: absolute;
  top: 40px;
  left: 50%;
  margin-left: calc((819px * 3 + 10px * 2) / -2);
}

.notice .promotion .swiper-slide {
  opacity: 0.5;
  transition: opacity 1s;
  /* posr을 보면 아 자식 요소 중 누가 얘를 사용했구나 라고 이해하면 될 것 같다. */
  position: relative;
}
.notice .promotion .swiper-slide-active {
  opacity: 1;
}
.notice .promotion .swiper-slide .btn {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  /* 위에서 이미 .btn에 가로 너비를 명시해줬으므로 auto 적용이 된다. */
  margin: auto;
}

.notice .promotion .swiper-pagination {
  /* .swiper-pagination에 이미 라이브러리 자체적으로 스타일이 기본적으로 들어가 있고, 거기에 Position 값이 이미 존재한다. */
  bottom: 40px;
  left: 0;
  right: 0;
}
/* bullet 부분의 클래스는 전부 개발자도구에서 직접 찾아야 한다. */
.notice .promotion .swiper-pagination .swiper-pagination-bullet {
  /* 기존에 있는 배경 색상은 지우고(투명하게하고) 이미지를 넣을 것이므로 */
  background-color: transparent;
  background-image: url("../images/promotion_slide_pager.png");
  width: 12px;
  height: 12px;
  margin-right: 6px;
  outline: none;
}
.notice .promotion .swiper-pagination .swiper-pagination-bullet:last-child {
  margin-right: 0;
}
.notice .promotion .swiper-pagination .swiper-pagination-bullet-active {
  background-image: url("../images/promotion_slide_pager_on.png");
}
/* 쉼표는 다중선택자 (줄바꿈해야 시각적으로 알아내기 쉬움) */
.notice .promotion .swiper-prev,
.notice .promotion .swiper-next {
  width: 42px;
  height: 42px;
  border: 2px solid #333;
  border-radius: 50%;
  position: absolute;
  top: 300px;
  z-index: 1;
  cursor: pointer;
  /* 라이브러리 기본값 지우기 */
  outline: none;

  /* 아이콘 가운데 정렬 */
  display: flex;
  justify-content: center;
  align-items: center;

  transition: 0.4s;
}
.notice .promotion .swiper-prev {
  left: 50%;
  margin-left: -480px;
}
.notice .promotion .swiper-next {
  right: 50%;
  margin-right: -480px;
}
.notice .promotion .swiper-prev:hover,
.notice .promotion .swiper-next:hover {
  background-color: #333;
  color: #fff;
}

/* ===================================== REWARDS ===================================== */
.rewards {
  position: relative;
}
.rewards .bg-left {
  width: 50%;
  height: 100%;
  background-color: #272727;
  position: absolute;
  top: 0;
  left: 0;
}
.rewards .bg-right {
  width: 50%;
  height: 100%;
  background-color: #d5c798;
  position: absolute;
  top: 0;
  right: 0;
}
.rewards .inner {
  background-image: url("../images/rewards.jpg");
  height: 241px;
}
.rewards .btn-group {
  /* 부모는 .inner인데 전역 속성으로 우리가 posr을 넣어놨다. */
  position: absolute;
  bottom: 24px;
  right: 0;
  width: 250px;
  display: flex;
  /* 가로너비 250보다 넘칠 것 같으면 줄바꿈 허용 */
  flex-wrap: wrap;
}
.rewards .btn-group .btn.sign-up {
  margin-right: 10px;
}
.rewards .btn-group .btn.sign-in {
  /* sign-up이랑 sign-in을 가로로 배치할 건데 둘이 합쳐서 250이 넘으므로 sign-in 너비를 이렇게 조정해준다. */
  width: 110px;
}
.rewards .btn-group .btn.gift {
  /* gift는 아래에 배치될 녀석이다. */
  margin-top: 10px;
  /* gift만 아래에서 꽉채우도록 1을 준다. */
  flex-grow: 1;
}

/* ===================================== YOUTUBE VIDEO ===================================== */
.youtube {
  position: relative;
  height: 700px;
  background-color: #333;
  overflow: hidden;
}
.youtube .youtube__area {
  /* FHD : 1920 X 1080 */
  width: 1920px;
  background-color: orange;
  position: absolute;
  left: 50%;
  margin-left: calc(1920px / -2);
  top: 50%;
  /* 세로 길이도 16:9 비율로 들어갈 수 있게 */
  margin-top: calc((1920px * 9 / 16 / -2));
}
/* html에서 요소를 만들지 않고 css에서 자식 요소를 만들기 위해서 */
/* 결국은 자식 요소에서 padding으로 밀어올려서 .youtube__area가 보이게 되고, 이걸 위에서 조정하는 것임. */

/* el::before 이란 선택한 요소의 첫번째 자식 요소로 가상 요소를 생성 */
.youtube .youtube__area::before {
  content: "";
  display: block;
  width: 100%;
  height: 0;
  padding-top: 56.25%;
}
/* 사용자에게 조작 가능한 게 아니라 배경으로 깔리는 영상이라는 알려주기 위해 패턴을 깔고 어둡게 덮는다. */
.youtube .youtube__cover {
  background-image: url("../images/video_cover_pattern.png");
  background-color: rgba(0, 0, 0, 0.3);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

#player {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.youtube .inner {
  height: 700px;
}
.youtube .floating1 {
  position: absolute;
  top: 50px;
  left: 0;
}
.youtube .floating2 {
  position: absolute;
  top: 350px;
  left: 150px;
}
/* floating3는 season product에서 처리해서 위에 올라올 수 있게끔 처리한다. */
/* .youtube .floating3 {
  position: absolute;
  bottom: -200px;
  right: 0;
} */

/* ===================================== SEASON PRODUCT ===================================== */
.season-product {
  background-image: url("../images/season_product_bg.jpg");
}
.season-product .inner {
  height: 400px;
}
/* floating3 */
.season-product .floating3 {
  position: absolute;
  top: -200px;
  right: 0;
}
.season-product .text-group {
  position: absolute;
  top: 110px;
  right: 100px;
}
.season-product .text-group .title {
  margin-bottom: 10px;
}
.season-product .text-group .description {
  margin-bottom: 15px;
}
/* .season-product .text-group .more {} */

/* ===================================== RESERVE COFFEE ===================================== */
.reserve-coffee {
  /* background-image는 기본값이 repeat이므로 가로너비를 꽉채우는 게 기본값이다. */
  background-image: url("../images/reserve_bg.jpg");
}
.reserve-coffee .inner {
  height: 400px;
}
.reserve-coffee .reserve-logo {
  position: absolute;
  top: 110px;
  left: 0;
}
.reserve-coffee .text-group {
  position: absolute;
  top: 124px;
  left: 208px;
}
.reserve-coffee .product {
  position: absolute;
  top: 0;
  right: 0;
}

/* ===================================== PICK YOUR FAVORITE ===================================== */
.pick-youre-favorite {
  background-image: url("../images/favorite_bg.jpg");
  background-repeat: no-repeat;
  background-position: center;
  /* 패럴랙스 스크롤링 구현(이미지를 뷰포트 기준으로 고정해둬서 스크롤해도 배경이 따라오지 않도록 */
  background-attachment: fixed;
  /* 배경 이미지를 요소의 더 넓은 너비에 맞춰서 출력 */
  background-size: cover;
}
.pick-youre-favorite .inner {
  /* 위아래만 적용 */
  padding: 110px 0;
}
.pick-youre-favorite .text-group {
  /* background-color: orange; */
  /* flex를 주면 가로정렬이 되는데, 여기서 너비 값을 제한하고 줄바꿈을 허용해서 레이아웃을 짤 수도 있다. */
  width: 362px;
  display: flex;
  /* 줄바꿈 가능한 형태로 */
  flex-wrap: wrap;
  justify-content: flex-end;
  margin-left: 100px;
}
.pick-youre-favorite .text-group .title {
  margin-bottom: 40px;
}
.pick-youre-favorite .text-group .description {
  margin-bottom: 40px;
}

/* ===================================== RESERVE STORE ===================================== */
.reserve-store {
  /* pick-your-favorite 처럼 패럴렉스 구현 */
  background-image: url("../images/reserve_store_bg.jpg");
  background-repeat: no-repeat;
  background-position: center;
  background-attachment: fixed;
  background-size: cover;
}
.reserve-store .inner {
  height: 600px;
  display: flex;
  justify-content: center;
  align-items: center;
}
.reserve-store .medal {
  /* 이미지 크기를 여기에도 부여해서 영역을 딱 맞춰줘야 허공에 hover해도 회전하는 문제를 방지할 수 있다. */
  width: 334px;
  height: 334px;
  perspective: 600px;
}
/* 다중선택자. 여기서 공통 스타일 주려한다. */
.reserve-store .medal .front,
.reserve-store .medal .back {
  width: 334px;
  height: 334px;
  /* 뒤집어진 요소는 지워주세요. */
  backface-visibility: hidden;
  transition: 1s;
  position: absolute;
}
.reserve-store .medal .front {
  /* 요소 2개가 겹쳐지게 된다. */
  /* 0deg에서 시작하겠다. 변화는 없지만 크롬 말고 다른 브라우저에서는 시작값이 다를 수 있으므로 이렇게 명시해줘야 한다. */
  transform: rotateY(0deg);
}
.reserve-store .medal:hover .front {
  transform: rotateY(180deg);
}
.reserve-store .medal .back {
  /* 뒤집어주세요. */
  transform: rotateY(-180deg);
}
.reserve-store .medal:hover .back {
  transform: rotateY(0deg);
}
.reserve-store .medal .back .btn {
  position: absolute;
  top: 240px;
  left: 0;
  right: 0;
  /* btn에 이미 가로너비 넣어놨으므로 width 안 넣어도 된다. */
  margin: auto;
}

/* ===================================== FIND STORE ===================================== */
.find-store {
  background-image: url("../images/find_store_bg.jpg");
}
.find-store .inner {
  height: 400px;
}
.find-store .texture1 {
  position: absolute;
  top: 0;
  left: 400px;
}
.find-store .texture2 {
  position: absolute;
  bottom: 0;
  right: 0;
}
.find-store .picture {
  /* picture 2개 다 동그라미 형태가 되도록 하기 위해서 */
  border-radius: 50%;
  /* x축 2px y축 2px blur가 8px 50% 투명도를 갖는 검정색 */
  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.5);
  position: absolute;
}
.find-store .picture1 {
  top: -60px;
  left: 0;
}
.find-store .picture2 {
  top: 150px;
  left: 250px;
}
.find-store .text-group {
  position: absolute;
  top: 120px;
  left: 550px;
}
.find-store .text-group .title {
  margin-bottom: 20px;
}
.find-store .text-group .description {
  margin-bottom: 20px;
}

/* ===================================== AWARDS ===================================== */
.awards {
  background-color: #272727;
}
.awards .inner {
  padding: 40px 0;
}
.awards .swiper-container {
  width: 100%;
  height: 40px;
}
.awards .swiper-prev,
.awards .swiper-next {
  width: 42px;
  height: 42px;
  border: 2px solid #fff;
  border-radius: 50%;
  /* 파란색 테두리 생기지 않도록 */
  outline: none;
  /* 아이콘이 흰색이 될 수 있게 */
  color: #fff;
  opacity: 0.3;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0;
  bottom: 0;
  /* 수직으로 정렬할 거면 height가 존재해야 한다. */
  margin: auto;
}
.awards .swiper-prev {
  left: -100px;
}
.awards .swiper-next {
  right: -100px;
}
.awards .swiper-prev:hover,
.awards .swiper-next:hover {
  background-color: #fff;
  color: #333;
}

/* ===================================== to-top ===================================== */
#to-top {
  width: 42px;
  height: 42px;
  background-color: #333;
  color: #fff;
  border: 2px solid #fff;
  border-radius: 10px;
  cursor: pointer;
  /* 내부 아이콘이 가운데에 올 수 있게 */
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  bottom: 30px;
  right: 30px;
  z-index: 9;
}