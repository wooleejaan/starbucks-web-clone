/* ===================================== COMMON ===================================== */
body {
  /* 검정색보다 어두운 회색이 덜 촌스럽다. */
  color: #333;
  font-size: 16px;
  font-weight: 400;
  /* 16px의 1.4배  (사용하는 글꼴에 따라 최적의 line-height가 다를 수는 있다.) */
  line-height: 1.4;
  font-family: "Nanum Gothic", sans-serif;
  /* 임시로 body 값에 높이를 지정해주는 경우가 있는데, 보통 스크롤 이벤트 구현할 때 임시로 많이 넣는다. */
  /* height: 6000px; */
}
img {
  display: block;
}
a {
  text-decoration: none;
}
.inner {
  width: 1100px;
  /* 좌우만 margin을 줘서 좌우 가운데 정렬  */
  margin: 0 auto;
  /* 자식 요소에서 position을 사용하려면 부모 요소에도 position이 있어야 한다(처음부터 추가하는 게 아니라 자식 요소 스타일링하면서 자연스럽게 추가). */
  position: relative;
}
.btn {
  width: 130px;
  padding: 10px;
  border: 1px solid #333;
  border-radius: 4px;
  color: #333;
  /* 부모요소로부터 글자 크기를 이상하게 받을 수 있으므로 명시해줘야 한다. */
  font-size: 16px;
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  /* padding과 border만큼 요소가 커지지 않도록 하는 장치 */
  box-sizing: border-box;
  /* a 태그나 span 태그에 btn 클래스를 부여해도 정상적으로 형태 나오도록 */
  display: block;
  transition: 0.4s;
}
.btn:hover {
  background-color: #333;
  color: #fff;
}
/* 클래스를 2개 작성했으므로 우선순위 20점을 확보한 것이므로, 이후에 btn--reverse로 덮어씌워도 정상적으로 덮어씌워질 것이다. */
.btn.btn--reverse {
  background-color: #333;
  color: #fff;
}
/* 가상클래스까지 합해서 우선순위 30점 */
.btn.btn--reverse:hover {
  background-color: transparent;
  color: #333;
}
.btn.btn--brown {
  border-color: #592b18;
  color: #592b18;
}
.btn.btn--brown:hover {
  background-color: #592b18;
  color: #fff;
}
.btn.btn--gold {
  border-color: #d9aa8a;
  color: #d9aa8a;
}
.btn.btn--gold:hover {
  background-color: #d9aa8a;
  color: #fff;
}
.btn.btn--white {
  border-color: #fff;
  color: #fff;
}
.btn.btn--white:hover {
  color: #333;
  background-color: #fff;
}

/* 스크롤 애니메이션 */
.back-to-position {
  opacity: 0;
  transition: 1s;
}
.back-to-position.to-right {
  /* 수평으로 -150px 이동 => 시작점을 왼쪽에 밀어넣고 변화를 주면 오른쪽으로 이동하는 효과가 발생 */
  transform: translateX(-150px);
}
.back-to-position.to-left {
  /* 시작점을 왼쪽에 밀어넣고 변화를 주면 오른쪽으로 이동하는 효과가 발생 */
  transform: translateX(150px);
}
.show .back-to-position {
  opacity: 1;
  transform: translateX(0);
}
.show .back-to-position.delay-0 {
  /* 기본값이 0이긴 하다. */
  transition-delay: 0s;
}
.show .back-to-position.delay-1 {
  transition-delay: 0.3s;
}
.show .back-to-position.delay-2 {
  transition-delay: 0.6s;
}
.show .back-to-position.delay-3 {
  transition-delay: 0.9s;
}

/* ===================================== HEADER ===================================== */
header {
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  position: fixed;
  width: 100%;
  top: 0;
  /* 뱃지 부분이 visual section 보다 위에 있어야 하므로 아예 높은 값을 배정해준다. */
  z-index: 9;
}
header > .inner {
  /* header 자체는 height 값이 없으므로 줄어드려고 하고, .inner가 120px이므로 header도 120px 높이를 갖는다. */
  height: 120px;
}
header .logo {
  /* 로고의 실제 높이값 */
  height: 75px;
  /* 부모 요소 기준 배치 */
  position: absolute;
  /* 로고를 inner 왼쪽으로 밀어넣고, 수직기준 가운데 배치 */
  top: 0;
  bottom: 0;
  left: 0;
  margin: auto;
}

/* ===================================== HEADER(서브메뉴) ===================================== */
header .sub-menu {
  /* .sub-menu의 부모는 .inner */
  position: absolute;
  top: 10px;
  right: 0;
  display: flex;
}
header .sub-menu ul.menu {
  /* 서브메뉴에는 Arial이 예쁘다. 콤마 뒤에는 서브로, 앞에 꺼가 없으면 대체하도록 여러 개 작성 가능 */
  font-family: Arial, sans-serif;
  display: flex;
}
header .sub-menu ul.menu li {
  position: relative;
}
header .sub-menu ul.menu li::before {
  content: "";
  /* display: block; */
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto 0;
}
header .sub-menu ul.menu li:first-child::before {
  display: none;
}
header .sub-menu ul.menu li a {
  display: block;
  font-size: 12px;
  padding: 11px 16px;
  color: #656565;
}
header .sub-menu ul.menu li a:hover {
  color: #000;
}

header .sub-menu .search {
  /* background-color: red; */
  height: 34px;
  position: relative;
}
header .sub-menu .search input {
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  border-radius: 5px;
  outline: none;
  background-color: #fff;
  color: #777;
  font-size: 12px;
  transition: width 0.4s;
}
header .sub-menu .search input:focus {
  width: 190px;
  border-color: #669900;
}
header .sub-menu .search .material-icons {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 5px;
  /* 구글 material-icons 크기가 24px */
  height: 24px;
  margin: auto 0;
  /* 아무것도 작성 안 하면 all 생략 */
  transition: 0.4s;
}

header .sub-menu .search.focused .material-icons {
  opacity: 0;
}

/* ===================================== HEADER(메인메뉴) ===================================== */
header .main-menu {
  display: flex;
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1;
}
/* header .main-menu .item {} */
header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}
/* hover를 item__name에 주는 게 아니라 .item에 줘야 contents도 영향 받는다. */
header .main-menu .item:hover .item__name {
  background-color: #2c2a29;
  color: #669900;
  /* radius는 좌상단/우상단만 적용 */
  border-radius: 6px 6px 0 0;
}
header .main-menu .item .item__contents {
  width: 100%;
  /* 뷰포트 기준으로 배치하겠다. */
  position: fixed;
  left: 0;
  display: none;
}
header .main-menu .item:hover .item__contents {
  display: block;
}
header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
  /* height: 200px; => 내용물을 채웠으니 높이값 지정하지 않아도 auto로 차지함*/
}
header .main-menu .item .item__contents .contents__menu > ul {
  display: flex;
  padding: 20px 0;
}
header .main-menu .item .item__contents .contents__menu > ul > li {
  width: 220px;
}
header .main-menu .item .item__contents .contents__menu > ul > li h4 {
  padding: 3px 0 12px 0;
  font-size: 14px;
  color: #fff;
}
/* header .main-menu .item .item__contents .contents__menu > ul > li h4 ul {}  */
header .main-menu .item .item__contents .contents__menu > ul > li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover {
  color: #669900;
}
header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  /* 아래에서 중복으로 12px을 넣으니까 상위 요소에 이렇게 넣는 게 더 깔끔하잖아(글자 관련 속성은 상속된다) */
  font-size: 12px;
  /* background-repeat의 기본값이 repeat이므로 */
  background-image: url("../images/main_menu_pattern.jpg");
}
header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700;
  /* font-size: 12px; */
}
header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
  /* font-size: 12px; */
}

/* ===================================== HEADER(전역 뱃지) ===================================== */
header .badges {
  /* .inner 밖에 작성했으므로 부모는 header => header로 올라가서 position 값이 있는지 확인(없으면 posr 할당) */
  position: absolute;
  top: 130px;
  right: 12px;
}
header .badges .badge {
  border-radius: 10px;
  /* radius를 여기에 줬으므로, 내부에 있는 이미지가 깎은 모서리 밖으로 넘쳐 흐르지 않도록 hidden */
  overflow: hidden;
  margin-bottom: 12px;
  /* x축 4px이동, y축 4px이동, blur를 10px 추가 rgb로 검정색 추가 */
  /* 검정색이면 rgb 0 0 0인데 a가 붙으니까 뒤에 투명도도 값 배정해줘야 함 0.15 */
  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.15);
  cursor: pointer;
}


/* ===================================== FOOTER ===================================== */
footer {
  background-color: #272727;
  border-top: 1px solid #333;
}
footer .inner {
  padding: 40px 0 60px 0;
}
footer .menu {
  display: flex;
  justify-content: center;
} 
footer .menu li {
  position: relative;
} 
/* 글자 사이에 점을 만들어줄건데, 새로운 요소를 만드는 건 부담스러우니 가상요소선택자를 사용한다. */
footer .menu li::before {
  content: "";
  width: 3px;
  height: 3px;
  background-color: #555;
  /* before는 기본적으로 인라인 요소이므로 가로/세로 값을 가지려면 block을 줘야 해(근데 posa, posf는 자동으로 block이 됨) */
  position: absolute;
  /* top/bottom 0 주고 margin auto 주면 세로정렬 */
  top: 0;
  bottom: 0;
  right: -1px;
  margin: auto;
} 
footer .menu li:last-child::before {
  display: none;
}
footer .menu li a {
  color: #ccc;
  font-size: 12px;
  font-weight: 700;
  /* padding을 주는 이유는 사용자가 클릭할 수 있는 범위를 늘리기 위해서 */
  padding: 15px;
  /* inline 요소는 margin/padding 정상적으로 사용 불가능하므로 */
  display: block;
} 
footer .menu li a.green {
  color: #669900;
}
footer .btn-group {
  margin-top: 20px;
  display: flex;
  justify-content: center;
}
footer .btn-group .btn {
  font-size: 12px;
  margin-right: 10px;
} 
footer .btn-group .btn:last-child {
  margin-right: 0;
}
footer .info {
  margin-top: 30px;
  /* 글자 정렬 */
  text-align: center;
}
footer .info span {
  /* span 태그는 인라인 요소. 인라인 요소는 수직이 아니라 수평으로 쌓인다(글자처럼 취급되어야 하므로). */
  margin-right: 20px;
  color: #999;
  font-size: 12px;
} 
footer .info span:last-child {
  margin-right: 0;
}
footer .copyright {
  color: #999;
  font-size: 12px;
  text-align: center;
  margin-top: 12px;
}
footer .logo {
  /* 상 중(좌우) 하 */
  margin: 30px auto 0;
  /* 
  원래 auto로 주면서 가로 정렬을 하려면 width가 있어야 하잖아. 근데 얘는 없어도 된다. 
  왜냐면, img 태그라서. img 요소는 브라우저가 너비를 알고 있다고 가정해서 별도로 가로 사이즈 안 넣어도 된다. 
  */
}